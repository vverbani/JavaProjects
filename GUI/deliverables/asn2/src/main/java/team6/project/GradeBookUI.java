package team6.project;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JPanel;

import java.io.*;
/*

 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * Class to implement the GUI for the GradeBook project
 * 
 * @author UWO - CS2212 - Team 6 (ATripleV)
 */
public class GradeBookUI extends javax.swing.JFrame implements ActionListener, Serializable {

 
 /* ************************************************************
 * Instance Variables
 ************************************************************ */
 private static ArrayList<Course> courses = new ArrayList<Course>();
 private static JFrame frame;
 private static JPanel panel;

 /**
  * Constructor for the Gradebook GUI
  */
 public GradeBookUI() {
  initComponents(); //initialize the graphical components
  loadData();   //loading saved data in
 }

 /**
  * Creates and displays the addCourse frame
  */
 private static void addCourse() {
  frame = new JFrame("Add Course");
  panel = new AddCourse();
  frame.add(panel);
  frame.pack();
  frame.setVisible(true);
 }

 /**
  * Updates information, called by other classes
  * 
  * @param title course title
  * @param code course code
  * @param term course term
  */
 public static void updateAddCourse(String title, String code, String term) {
  courses.add(new Course(title, code, term));
  courseList.addItem(courses.get(courses.size() - 1));
  frame.dispose();
 }
 
 /**
  * Creates and displays the deleteCourse frame
  */
 private static void deleteCourse() {
  frame = new JFrame("Delete Course");
  panel = new DeleteCourse(courses);
  frame.add(panel);
  frame.pack();
  frame.setVisible(true);
 }

 /**
  * Performs removal, called by other classes
  * 
  * @param index the index value of the course to be deleted
  */
 public static void updateDeleteCourse(int index) {
  courseList.removeItemAt(index);
  courses.remove(index);
  frame.dispose();
 }

 /**
  * Creates and displays the editCourse frame
  */
 private static void editCourse() {
  frame = new JFrame("Edit Course");
  panel = new EditCourse(courses);
  frame.add(panel);
  frame.pack();
  frame.setVisible(true);
 }

 /**
  * Performs edit, called by other classes
  * 
  * @param i the index of the added course 
  * @param title  title of the added course
  * @param code  code of the added course
  * @param term term of the added course
  */
 public static void updateEditCourse(int i, String title, String code,
   String term) {
  if (!title.equals(""))
   courses.get(i).setCourseTitle(title);
  if (!code.equals(""))
   courses.get(i).setCourseCode(code);

  courses.get(i).setCourseTerm(term);
  frame.dispose();
 }

 /**
  * Handles all actions
  * 
  * @param c clicked area
  */
 public void actionPerformed(ActionEvent c) {
  if ("addCourse".equals(c.getActionCommand()))
   addCourse();
  else if ("deleteCourse".equals(c.getActionCommand()))
   deleteCourse();
  else if ("editCourse".equals(c.getActionCommand()))
   editCourse();
  else if("save".equals(c.getActionCommand()))
   storeData();
 }

 /**
  * This method is called from within the constructor to initialize the form.
  * WARNING: Do NOT modify this code. The content of this method is always
  * regenerated by the Form Editor.
  */
 @SuppressWarnings("unchecked")
 // <editor-fold defaultstate="collapsed"
 // desc="Generated Code">//GEN-BEGIN:initComponents
 private void initComponents() {

  coursePanel = new javax.swing.JPanel();
  selectCourseLabel = new javax.swing.JLabel();
  
  
  courseList = new javax.swing.JComboBox();
  
  
  openCourseBtn = new javax.swing.JButton();
  mainPanel = new javax.swing.JTabbedPane();
  mainToolbar = new javax.swing.JMenuBar();
  fileMenu = new javax.swing.JMenu();
  addMenu = new javax.swing.JMenu();

  // Action command and listener for adding course
  addCourse = new javax.swing.JMenuItem();
  addCourse.setActionCommand("addCourse");
  addCourse.addActionListener(this);

  addStudent = new javax.swing.JMenuItem();
  addDeliverable = new javax.swing.JMenuItem();
  editMenu = new javax.swing.JMenu();

  // Command and Listener for editing course
  editCourse = new javax.swing.JMenuItem();
  editCourse.setActionCommand("editCourse");
  editCourse.addActionListener(this);

  editStudent = new javax.swing.JMenuItem();
  editDeliverable = new javax.swing.JMenuItem();
  deleteMenu = new javax.swing.JMenu();

  // Command and listener for deleting course
  deleteCourse = new javax.swing.JMenuItem();
  deleteCourse.setActionCommand("deleteCourse");
  deleteCourse.addActionListener(this);

  //Command for saving course data
  save = new javax.swing.JMenuItem();
  save.setActionCommand("save");
  save.addActionListener(this);
  

  
  deleteStudent = new javax.swing.JMenuItem();
  deleteDeliverable = new javax.swing.JMenuItem();
  importExportMenu = new javax.swing.JMenu();
  importStudents = new javax.swing.JMenuItem();
  exportStudents = new javax.swing.JMenuItem();

  setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

  coursePanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

  selectCourseLabel.setText(" Select Course:");

  openCourseBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
  openCourseBtn.setText("Open");

  javax.swing.GroupLayout coursePanelLayout = new javax.swing.GroupLayout(
    coursePanel);
  coursePanel.setLayout(coursePanelLayout);
  coursePanelLayout
    .setHorizontalGroup(coursePanelLayout
      .createParallelGroup(
        javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(
        javax.swing.GroupLayout.Alignment.TRAILING,
        coursePanelLayout
          .createSequentialGroup()
          .addComponent(selectCourseLabel)
          .addPreferredGap(
            javax.swing.LayoutStyle.ComponentPlacement.RELATED)
          .addComponent(
            courseList,
            javax.swing.GroupLayout.PREFERRED_SIZE,
            425,
            javax.swing.GroupLayout.PREFERRED_SIZE)
          .addPreferredGap(
            javax.swing.LayoutStyle.ComponentPlacement.RELATED)
          .addComponent(
            openCourseBtn,
            javax.swing.GroupLayout.DEFAULT_SIZE,
            javax.swing.GroupLayout.DEFAULT_SIZE,
            Short.MAX_VALUE)));
  coursePanelLayout
    .setVerticalGroup(coursePanelLayout
      .createParallelGroup(
        javax.swing.GroupLayout.Alignment.TRAILING)
      .addComponent(openCourseBtn)
      .addGroup(
        coursePanelLayout
          .createParallelGroup(
            javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(
            courseList,
            javax.swing.GroupLayout.PREFERRED_SIZE,
            22,
            javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(selectCourseLabel)));

  mainPanel.setMinimumSize(new java.awt.Dimension(300, 300));

  fileMenu.setBorder(javax.swing.BorderFactory.createCompoundBorder());
  fileMenu.setText("File");

  save.setAccelerator(javax.swing.KeyStroke.getKeyStroke(
    java.awt.event.KeyEvent.VK_S,
    java.awt.event.InputEvent.CTRL_MASK));
 // save.setIcon(new javax.swing.ImageIcon(getClass().getResource(
    //"save.png"))); // NOI18N
  save.setMnemonic('S');
  save.setText("Save");
  fileMenu.add(save);



  mainToolbar.add(fileMenu);

  addMenu.setText("Add");

  addCourse.setText("Course");
  addMenu.add(addCourse);

  addStudent.setText("Student");
  addMenu.add(addStudent);

  addDeliverable.setText("Deliverable");
  addMenu.add(addDeliverable);

  mainToolbar.add(addMenu);

  editMenu.setText("Edit");

  editCourse.setLabel("Course");
  editMenu.add(editCourse);

  editStudent.setLabel("Student");
  editMenu.add(editStudent);

  editDeliverable.setText("Deliverable");
  editMenu.add(editDeliverable);

  mainToolbar.add(editMenu);

  deleteMenu.setText("Delete");

  deleteCourse.setText("Course");
  deleteMenu.add(deleteCourse);

  deleteStudent.setText("Student");
  deleteMenu.add(deleteStudent);

  deleteDeliverable.setText("Deliverable");
  deleteMenu.add(deleteDeliverable);

  mainToolbar.add(deleteMenu);

  importExportMenu.setText("Import/Export");

  importStudents.setText("Import Student List");
  importExportMenu.add(importStudents);

  exportStudents.setText("Export Student List");
  importExportMenu.add(exportStudents);

  mainToolbar.add(importExportMenu);

  setJMenuBar(mainToolbar);

  javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
    getContentPane());
  getContentPane().setLayout(layout);
  layout.setHorizontalGroup(layout
    .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addComponent(mainPanel,
      javax.swing.GroupLayout.PREFERRED_SIZE, 0,
      Short.MAX_VALUE)
    .addComponent(coursePanel,
      javax.swing.GroupLayout.PREFERRED_SIZE,
      javax.swing.GroupLayout.DEFAULT_SIZE,
      javax.swing.GroupLayout.PREFERRED_SIZE));
  layout.setVerticalGroup(layout
    .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGroup(
      layout.createSequentialGroup()
        .addComponent(coursePanel,
          javax.swing.GroupLayout.PREFERRED_SIZE,
          javax.swing.GroupLayout.DEFAULT_SIZE,
          javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(
          javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(mainPanel,
          javax.swing.GroupLayout.DEFAULT_SIZE,
          javax.swing.GroupLayout.DEFAULT_SIZE,
          Short.MAX_VALUE)));

  pack();
 }// </editor-fold>//GEN-END:initComponents

 /**
  * @param args the command line arguments
  */
 public static void main(String args[]) {
  /* Set the Nimbus look and feel */
  // <editor-fold defaultstate="collapsed"
  // desc=" Look and feel setting code (optional) ">
  /*
   * If Nimbus (introduced in Java SE 6) is not available, stay with the
   * default look and feel. For details see
   * http://download.oracle.com/javase
   * /tutorial/uiswing/lookandfeel/plaf.html
   */
  try {
   for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager
     .getInstalledLookAndFeels()) {
    if ("Nimbus".equals(info.getName())) {
     javax.swing.UIManager.setLookAndFeel(info.getClassName());
     break;
    }
   }
  } catch (ClassNotFoundException ex) {
   java.util.logging.Logger.getLogger(GradeBookUI.class.getName())
     .log(java.util.logging.Level.SEVERE, null, ex);
  } catch (InstantiationException ex) {
   java.util.logging.Logger.getLogger(GradeBookUI.class.getName())
     .log(java.util.logging.Level.SEVERE, null, ex);
  } catch (IllegalAccessException ex) {
   java.util.logging.Logger.getLogger(GradeBookUI.class.getName())
     .log(java.util.logging.Level.SEVERE, null, ex);
  } catch (javax.swing.UnsupportedLookAndFeelException ex) {
   java.util.logging.Logger.getLogger(GradeBookUI.class.getName())
     .log(java.util.logging.Level.SEVERE, null, ex);
  }
  // </editor-fold>

  /* Create and display the form */
  java.awt.EventQueue.invokeLater(new Runnable() {
   public void run() {
    new GradeBookUI().setVisible(true);
   }
  });
 }
 /**
  * Storing data when the save button is clicked
  */
   private void storeData()
   {
    try{
       
       FileOutputStream fOut = new FileOutputStream("save_data.dat");
       ObjectOutputStream out = new ObjectOutputStream(fOut);
       out.writeObject(this.courses);
       out.close(); 
       fOut.close();
       
       System.out.println("file saved correctly");
     }
     catch(IOException e)
     {
       System.out.println(e.toString());
     }
   }
 /**
  * load the data into the program when the program initializes
  */
   private void loadData() 
   {
      try {
    ObjectInputStream in = new ObjectInputStream(new FileInputStream("save_data.dat"));
    ArrayList<Course> listCourses = (ArrayList<Course>) in.readObject();
 
    
    // load in the data
    for(int i =0; i < listCourses.size(); i++)
    {
     this.courses.add(listCourses.get(i));
     System.out.println(listCourses.get(i));
     courseList.addItem(courses.get(courses.size()-1));

    }

    
    System.out.println("Load Successful");
       in.close();  
   } catch (IOException e) {
    // TODO Auto-generated catch block
    //e.printStackTrace();
    System.out.println("Load Fail");
   } catch (ClassNotFoundException e) {
    // TODO Auto-generated catch block
    //e.printStackTrace();
    System.out.println("Load Fail");
   }
      finally{
       
      }
    }
 
 // Variables declaration - do not modify//GEN-BEGIN:variables
 private javax.swing.JMenuItem addCourse;
 private javax.swing.JMenuItem addDeliverable;
 private javax.swing.JMenu addMenu;
 private javax.swing.JMenuItem addStudent;
 private static javax.swing.JComboBox courseList;
 private static javax.swing.JPanel coursePanel;
 private javax.swing.JMenuItem deleteCourse;
 private javax.swing.JMenuItem deleteDeliverable;
 private javax.swing.JMenu deleteMenu;
 private javax.swing.JMenuItem deleteStudent;
 private javax.swing.JMenuItem editCourse;
 private javax.swing.JMenuItem editDeliverable;
 private javax.swing.JMenu editMenu;
 private javax.swing.JMenuItem editStudent;
 private javax.swing.JMenuItem exportStudents;
 private javax.swing.JMenu fileMenu;
 private javax.swing.JMenu importExportMenu;
 private javax.swing.JMenuItem importStudents;
 private javax.swing.JTabbedPane mainPanel;
 private javax.swing.JMenuBar mainToolbar;
 private javax.swing.JButton openCourseBtn;
 private javax.swing.JMenuItem save;
 private javax.swing.JLabel selectCourseLabel;
 // End of variables declaration//GEN-END:variables
}
